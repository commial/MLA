name: mla release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_REF: "${{ github.ref }}"

jobs:
  build:
    strategy:
      matrix:
        build: [linux-x86_64, windows-i686, windows-x86_64]
        include:
          - build: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cargo_build: --target x86_64-unknown-linux-musl
            path: |
              ./target/x86_64-unknown-linux-musl/release/libmla.a
          - build: windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            msvc_platform: Win32
            path: |
              ./target/i686-pc-windows-msvc/release/mla.lib
              ./target/i686-pc-windows-msvc/release/mla.dll
              ./target/i686-pc-windows-msvc/release/mla.pdb
          - build: windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            msvc_platform: x64
            path: |
              ./target/x86_64-pc-windows-msvc/release/mla.lib
              ./target/x86_64-pc-windows-msvc/release/mla.dll
              ./target/x86_64-pc-windows-msvc/release/mla.pdb

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
    - uses: microsoft/setup-msbuild@v1.0.2
      if: matrix.msvc_platform
    - name: Build static library
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path=bindings/C/Cargo.toml --target=${{ matrix.target }}
    - name: Strip resulting binary
      if: matrix.os == 'ubuntu-latest'
      run: strip ${{ matrix.path }}
    - name: Upload resulting 'mla'
      uses: actions/upload-artifact@v1
      with:
        name: mla-${{ matrix.build }}
        path: ${{ matrix.path }}
    - name: DEBUG
      if: matrix.os == 'windows-latest'
      run: dir ./target/${{ matrix.target }}/release/
